<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com._3dhs.tnproject.post.dao.PostMapper">
    <resultMap id="profileMap" type="com._3dhs.tnproject.member.dto.ProfileDTO">
        <id property="memberCode" column="pr_member_code"/>
        <result property="profileCode" column="profile_code"/>
        <result property="profileNickname" column="profile_nickname"/>
        <result property="profileStatmsg" column="profile_statmsg"/>
        <result property="profileBgPath" column="profile_bg_path"/>
        <result property="profileImgPath" column="profile_img_path"/>
        <result property="memberBirth" column="member_birth"/>
    </resultMap>
    <resultMap id="attachMap" type="com._3dhs.tnproject.post.dto.AttachmentDTO">
        <id property="fileCode" column="file_code"/>
        <result property="originName" column="origin_name"/>
        <result property="safeName" column="safe_name"/>
        <result property="filePath" column="file_path"/>
        <result property="postCode" column="post_code"/>
    </resultMap>
<resultMap id="likeListMap" type="com._3dhs.tnproject.post.dto.LikeListDTO">
        <id property="postCode" column="post_code"/>
        <result property="memberCode" column="l_member_code"/>
        <result property="isPrivate" column="is_private"/>
    </resultMap>
    <resultMap id="postMap" type="com._3dhs.tnproject.post.dto.PostDTO">
        <id property="postCode" column="post_code"/>
        <result property="postTitle" column="post_title"/>
        <result property="postText" column="post_text"/>
        <result property="postState" column="post_state"/>
        <result property="postPrice" column="post_price"/>
        <result property="postWriDate" column="post_wri_date"/>
        <result property="postView" column="post_view"/>
        <result property="memberCode" column="po_member_code"/>
        <result property="postModDate" column="post_mod_date"/>
        <result property="postDeleDate" column="post_dele_date"/>
        <result property="isDeleted" column="is_deleted"/>
        <result property="folderCode" column="folder_code"/>
        <result property="profile.profileCode" column="profile_code"/>
        <result property="profile.profileNickname" column="profile_nickname"/>
        <result property="profile.profileStatmsg" column="profile_statmsg"/>
        <result property="profile.profileImgPath" column="profile_img_path"/>
    </resultMap>

    <select id="findListByParam" resultMap="postMap">
        SELECT post_code,
               post_title,
               post_text,
               post_price,
               po_member_code,
               folder_code,
               post_wri_date,
               profile_code,
               profile_nickname,
               profile_statmsg,
               profile_img_path,
               like_count,
               cmt_count
        FROM post_view
        WHERE post_status = 'PUBLIC'
          AND post_is_deleted= false
        <if test="contentsType != null and contentsType == 1">
            ORDER BY like_count DESC, post_code
        </if>
        <if test="contentsType != null and contentsType == 2">
            ORDER BY post_wri_date DESC, post_code DESC
        </if>
        LIMIT #{index}, #{range}
    </select>
    <select id="findLikeListByPostCode" parameterType="int" resultMap="likeListMap">
        SELECT
            post_code,
            l_member_code,
            is_private
        FROM
            tbl_like_list
        WHERE post_code = #{postCode}
    </select>
    <select id="findAttListByPostCode">
        SELECT
            *
        FROM tbl_attachment
        WHERE post_code = #{postCode}
    </select>

    <select id="findLikeListPostByMemberCode">
        SELECT
            pv.post_code,
            pv.post_title,
            pv. post_text,
            pv.post_price,
            pv. po_member_code,
            pv.folder_code,
            pv.post_wri_date,
            pv.profile_code,
            pv. profile_nickname,
            pv.profile_statmsg,
            pv.profile_img_path,
            pv.like_count,
            pv.cmt_count
        FROM post_view pv
        INNER JOIN
            tbl_like_list li ON li.post_code = pv.post_code
        WHERE li.l_member_code = #{memberCode}
        ORDER BY li.post_code DESC
    </select>

    <insert id="updateFolders" parameterType="java.util.List">
        INSERT INTO
            tbl_folder (folder_code, folder_name, folder_icon_path, folder_sequence, f_member_code, folder_status)
        VALUES
        <foreach collection="list" item="folderDTO" separator=",">
            (#{folderDTO.folderCode}, #{folderDTO.folderName}, #{folderDTO.folderIconPath}, #{folderDTO.folderSequence}, #{folderDTO.fMemberCode}, #{folderDTO.folderStatus})
        </foreach>
        ON DUPLICATE KEY UPDATE
            folder_name = VALUES(folder_name),
            folder_icon_path = VALUES(folder_icon_path),
            folder_sequence = VALUES(folder_sequence),
            folder_status = VALUES(folder_status)
    </insert>

    <insert id="insertAddDefaultFolder" parameterType="java.util.List">
        INSERT INTO
            tbl_folder (folder_code, folder_name, folder_icon_path, folder_sequence, f_member_code, folder_status)
        VALUES
        <foreach collection="list" item="folderDTO" separator=",">
            (#{folderDTO.folderCode}, #{folderDTO.folderName}, #{folderDTO.folderIconPath}, #{folderDTO.folderSequence}, #{folderDTO.fMemberCode}, #{folderDTO.folderStatus})
        </foreach>
        ON DUPLICATE KEY UPDATE
            folder_name = VALUES(folder_name),
            folder_icon_path = VALUES(folder_icon_path),
            folder_sequence = VALUES(folder_sequence),
            folder_status = VALUES(folder_status)
    </insert>

    <select id="findFolderList">
        SELECT
            folder_code,
            folder_name,
            folder_icon_path,
            folder_sequence,
            f_member_code
        FROM
            tbl_folder
        WHERE
            f_member_code = #{memberCode}
        ORDER BY
            folder_sequence ASC
    </select>

    <insert id="addLike" parameterType="com._3dhs.tnproject.post.dao.PostMapper">
        INSERT INTO
            tbl_like_list (postCode, memberCode, isPrivate)
        VALUES
            (#{postCode}, #{memberCode}, #{isPrivate})
    </insert>

    <delete id="cancelLike">
        DELETE INTO
            tbl_like_list
        WHERE
            postCode = #{postCode}
        AND
            memberCode = #{memberCode}
    </delete>

    <select id="hasLiked" resultType="boolean">
        SELECT
            COUNT(*) > 0
        FROM
            tbl_like_list
        WHERE
            postCode = #{postCode}
        AND
            memberCode = #{memberCode}
    </select>

    <select id="getLikeListByPostCode" resultType="com._3dhs.tnproject.post.dto.LikeListDTO">
        SELECT
            *
        FROM
            tbl_like_list
        WHERE
            postCode = #{postCode}
    </select>

    <select id="getPrivateLikesByPostCode" resultType="com._3dhs.tnproject.post.dto.LikeListDTO">
        SELECT
            *
        FROM
            tbl_like_list
        WHERE
            postCode = #{postCode}
        AND
            isPrivate = false
    </select>
</mapper>